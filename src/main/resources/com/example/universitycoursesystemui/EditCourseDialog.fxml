<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<!-- 최상위 컨테이너는 AnchorPane이며, EditCourseDialogController에서 UI 이벤트와 데이터 처리를 담당합니다. -->
<AnchorPane xmlns="http://javafx.com/javafx/17"
            xmlns:fx="http://javafx.com/fxml/1"
            fx:controller="com.example.universitycoursesystemui.controller.EditCourseDialogController">

    <!-- VBox를 사용하여 구성 요소들을 수직으로 배치합니다.
         spacing을 10px로 설정하여 각 요소 사이에 여유를 주고,
         alignment가 TOP_CENTER로 지정되어 내용이 상단 중앙에 정렬됩니다.
         prefWidth와 prefHeight를 통해 기본 크기를 지정하며, AnchorPane의 속성을 통해 모든 방향에서 10px의 여백을 부여합니다. -->
    <VBox spacing="10" alignment="TOP_CENTER" prefWidth="400" prefHeight="600"
          AnchorPane.topAnchor="10.0" AnchorPane.bottomAnchor="10.0"
          AnchorPane.leftAnchor="10.0" AnchorPane.rightAnchor="10.0">

        <!-- 제목 레이블: "강의 정보 수정"으로 강의 정보를 편집하는 화면임을 나타내며,
             인라인 CSS를 통해 폰트 크기, 굵기, 패딩이 지정되어 있습니다. -->
        <Label text="강의 정보 수정" style="-fx-font-size: 20px; -fx-font-weight: bold; -fx-padding: 10 0 10 0;"/>

        <!-- 입력 폼 영역: GridPane을 사용하여 레이블과 텍스트필드를 2열로 정돈하여 배치합니다.
             행과 열 사이의 간격은 각각 10px로 설정됩니다. -->
        <GridPane hgap="10" vgap="10">
            <!-- GridPane 전체에 10px의 여백을 주기 위해 Insets를 사용합니다. -->
            <padding>
                <Insets topRightBottomLeft="10"/>
            </padding>
            <!-- 첫 번째 열과 두 번째 열의 제약 조건을 설정합니다.
                 첫 번째 열은 최소 너비 100, 선호 너비 120,
                 두 번째 열은 최소 너비 150, 선호 너비 250으로 지정되어 있습니다. -->
            <columnConstraints>
                <ColumnConstraints hgrow="SOMETIMES" minWidth="100" prefWidth="120" />
                <ColumnConstraints hgrow="SOMETIMES" minWidth="150" prefWidth="250" />
            </columnConstraints>

            <!-- 각 행에 강의 정보 항목을 배치합니다. -->

            <!-- 과목 코드 항목 -->
            <Label text="과목 코드:" GridPane.columnIndex="0" GridPane.rowIndex="0"/>
            <TextField fx:id="courseIDField" promptText="예: CS101" GridPane.columnIndex="1" GridPane.rowIndex="0"/>

            <!-- 과목명 항목 -->
            <Label text="과목명:" GridPane.columnIndex="0" GridPane.rowIndex="1"/>
            <TextField fx:id="courseNameField" promptText="예: 자료구조" GridPane.columnIndex="1" GridPane.rowIndex="1"/>

            <!-- 교수 정보 항목 -->
            <Label text="교수:" GridPane.columnIndex="0" GridPane.rowIndex="2"/>
            <TextField fx:id="professorIDField" promptText="예: 홍길동" GridPane.columnIndex="1" GridPane.rowIndex="2"/>

            <!-- 학점 항목 -->
            <Label text="학점:" GridPane.columnIndex="0" GridPane.rowIndex="3"/>
            <TextField fx:id="creditField" promptText="예: 3" GridPane.columnIndex="1" GridPane.rowIndex="3"/>

            <!-- 강의 시간 항목 -->
            <Label text="시간:" GridPane.columnIndex="0" GridPane.rowIndex="4"/>
            <TextField fx:id="timeField" promptText="예: 월10-12, 수13-15" GridPane.columnIndex="1" GridPane.rowIndex="4"/>

            <!-- 이수 구분 항목 -->
            <Label text="이수구분:" GridPane.columnIndex="0" GridPane.rowIndex="5"/>
            <TextField fx:id="courseTypeField" promptText="예: 전공필수" GridPane.columnIndex="1" GridPane.rowIndex="5"/>

            <!-- 정원 항목 (최대 수강 인원) -->
            <Label text="정원:" GridPane.columnIndex="0" GridPane.rowIndex="6"/>
            <TextField fx:id="maxCapacityField" promptText="예: 50" GridPane.columnIndex="1" GridPane.rowIndex="6"/>

            <!-- 현재 등록원 항목 (이미 신청된 학생 수) -->
            <Label text="현재원:" GridPane.columnIndex="0" GridPane.rowIndex="7"/>
            <TextField fx:id="currentEnrollmentField" promptText="예: 30" GridPane.columnIndex="1" GridPane.rowIndex="7"/>
        </GridPane>

        <!-- 버튼 영역: HBox를 이용해 "저장"과 "취소" 버튼을 수평으로 배치합니다.
             버튼 간 간격은 10px이며, 중앙 정렬되어 있습니다. -->
        <HBox spacing="10" alignment="CENTER">
            <!-- 저장 버튼: 클릭 시 handleSave 메서드가 호출되며,
                 인라인 CSS로 폰트 크기, 배경색, 글자 색상, 테두리 모서리 등이 지정되어 있습니다. -->
            <Button fx:id="saveButton" text="저장" onAction="#handleSave" prefWidth="100"
                    style="-fx-font-size: 14px; -fx-background-color: #4CAF50; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;"/>
            <!-- 취소 버튼: 클릭 시 handleCancel 메서드를 호출하며, 스타일은 저장 버튼과 유사한 방식으로 지정됩니다. -->
            <Button fx:id="cancelButton" text="취소" onAction="#handleCancel" prefWidth="100"
                    style="-fx-font-size: 14px; -fx-background-color: #F44336; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;"/>
        </HBox>

    </VBox>
</AnchorPane>