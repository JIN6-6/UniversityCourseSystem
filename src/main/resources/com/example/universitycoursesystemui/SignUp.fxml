<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.RowConstraints?>

<!--
  이 FXML 파일은 회원가입 화면(Sign Up Screen)의 UI 레이아웃을 정의합니다.
  최상위 컨테이너는 VBox이며, 전체 화면의 정렬, 간격, 배경색 및 내부 여백을 설정합니다.
  컨트롤러는 com.example.universitycoursesystemui.controller.SignUpController가 담당합니다.
-->
<VBox alignment="CENTER" spacing="15.0"
      style="-fx-background-color: #FFFFFF; -fx-padding: 30;"
      xmlns="http://javafx.com/javafx/17"
      xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.universitycoursesystemui.controller.SignUpController">
    <children>
        <!-- 제목 레이블: '회원가입'을 표시하며, 스타일 클래스 'label-title'을 통해 CSS 스타일이 적용됩니다. -->
        <Label styleClass="label-title" text="회원가입" />

        <!-- GridPane: 회원가입에 필요한 입력 필드들을 격자 형태로 정렬합니다.
             hgap, vgap 속성을 통해 열과 행 사이의 간격을 각각 10픽셀로 설정합니다. -->
        <GridPane hgap="10" vgap="10">
            <!-- 두 개의 열에 대한 제약 조건을 정의합니다.
                 첫 번째 열은 최소너비 80, 선호너비 100, 두 번째 열은 최소너비 150, 선호너비 200입니다. -->
            <columnConstraints>
                <ColumnConstraints hgrow="SOMETIMES" minWidth="80" prefWidth="100"/>
                <ColumnConstraints hgrow="SOMETIMES" minWidth="150" prefWidth="200"/>
            </columnConstraints>

            <!-- 아이디 입력 항목 -->
            <Label text="아이디:" GridPane.columnIndex="0" GridPane.rowIndex="0"/>
            <TextField fx:id="userIDField" promptText="아이디" GridPane.columnIndex="1" GridPane.rowIndex="0"/>

            <!-- 비밀번호 입력 항목 -->
            <Label text="비밀번호:" GridPane.columnIndex="0" GridPane.rowIndex="1"/>
            <PasswordField fx:id="passwordField" promptText="비밀번호" GridPane.columnIndex="1" GridPane.rowIndex="1"/>

            <!-- 비밀번호 확인 입력 항목 -->
            <Label text="비밀번호 확인:" GridPane.columnIndex="0" GridPane.rowIndex="2"/>
            <PasswordField fx:id="confirmPasswordField" promptText="비밀번호 확인" GridPane.columnIndex="1" GridPane.rowIndex="2"/>

            <!-- 이름 입력 항목 -->
            <Label text="이름:" GridPane.columnIndex="0" GridPane.rowIndex="3"/>
            <TextField fx:id="nameField" promptText="이름" GridPane.columnIndex="1" GridPane.rowIndex="3"/>

            <!-- 사용자 유형 선택 항목: ComboBox를 통해 가입 시 역할(예: 학생, 교수 등)을 선택할 수 있습니다. -->
            <Label text="사용자 유형 선택:" GridPane.columnIndex="0" GridPane.rowIndex="4"/>
            <ComboBox fx:id="roleComboBox" prefWidth="250.0" promptText="유형 선택" GridPane.columnIndex="1" GridPane.rowIndex="4"/>

            <!-- 학과/전공 입력 항목 -->
            <Label text="학과/전공:" GridPane.columnIndex="0" GridPane.rowIndex="5"/>
            <TextField fx:id="majorField" promptText="학과/전공 입력" GridPane.columnIndex="1" GridPane.rowIndex="5"/>
        </GridPane>

        <!-- 버튼 영역: HBox를 사용해 '가입하기'와 '취소' 버튼을 수평으로 정렬합니다.
             spacing="10"과 alignment="CENTER"를 통해 버튼 사이 간격과 중앙 정렬을 지정합니다. -->
        <HBox spacing="10" alignment="CENTER">
            <!-- 가입하기 버튼: 클릭 시 컨트롤러의 handleSignUp 메서드가 호출됩니다.
                 선호 너비가 250픽셀로 설정되어 있습니다. -->
            <Button onAction="#handleSignUp" prefWidth="250.0" text="가입하기" />
            <!-- 취소 버튼: 클릭 시 컨트롤러의 handleCancel 메서드가 호출됩니다.
                 styleClass="button-cancel"을 통해 CSS 스타일이 적용됩니다. -->
            <Button onAction="#handleCancel" styleClass="button-cancel" text="취소" />
        </HBox>

    </children>
</VBox>